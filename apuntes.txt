JSON PRUEBA api/users { "name": "Cristian", "city": "Medallo", "telephone": "5555555555" }

//TOKEN
function parseJwt (token) {
    var base64Url = token.split('.')[1];
    var base64 = base64Url.replace('-', '+').replace('_', '/');
    return JSON.parse(window.atob(base64));
};

CORS 
--> chrome.exe --user-data-dir="C://Chrome dev session" --disable-web-security
--> "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --disable-web-security --disable-gpu --user-data-dir=~/chromeTemp
		
HEROKU
https://access-control-poli.herokuapp.com/

> heroku login -> access.control.poli@gmail.com
> heroku git:remote -a access-control-poli

> git remote

> git push -u origin master
> git push heroku master

> heroku logs --tail
> heroku logs --source app --tail


FRONT
npm update
npm start

router.js
		router.get('/api/generateqr', (req, res) => {
			//recibo query params $correo=true || $correo=false
			let body = req.body;
			// let sendMail = req.query.correo || false;
			// sendMail = Boolean(sendMail);

			// if (sendMail) {
			//     //MyMethods.sendMailTo(req.body.email, qrimage)
			// }

			console.log(`request -> GET ${req.path}`);
			const user = req.body; //.name.....
			// if (err) {
			//     console.log(`Error GET ./  _:` + err);
			//     res.json({
			//         ok: false,
			//         mensaje: 'Vamos mal!!'
			//     })
			// }

			//recibir data del formulario (json)

			//generarQR

			//recibir parametro en el path /api/generateqr $correo = 

			//if(true)->(enviarQRemail)

			//if(false)->(exponerQRdownload)

			//RES.CREADO,RES.NOCREADO

			res.status(200).json({
				ok: true,
				mensaje: 'Vamos bien!!',
				usuario: user
			});
		});

		router.get('/api/validateqr', (req, res) => {

			console.log(`request -> GET ${req.path}`);

			// recibir data del QR
			// consultar #QR, documento
			// si QR.valido (por fecha) RES.OK
			// si QR.invalido (por fecha o documento) RES.FALSE

			res.status(200).json({
				ok: true,
				mensaje: 'Vamos bien!!'
			});
		});